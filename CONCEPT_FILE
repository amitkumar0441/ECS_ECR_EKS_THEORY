For containerization IN AWS, we have ecs :- Elastic container service. - Main benefit ecs provides autoscaling and autohealing of containers. 
In ECS, we have to option to run the containers :- fargate(serverless architecture) and ec2 instances. 
Main components of ecs :- CLUSTER - TASK DEFINITION , TASK. 
ECR- for pulling images for ecs. ECR- REPOSITORY- IMAGE
In order to expose ecs we have two options :- use public ip address or go with application loadbalancer. 
ECR :- Elastic container registry :- By default in ecr we get private repository 
benefit of ecr :- easy and better integeration with other aws services. 
Most import feature :- SCAN ON PUSH. 
In docker , there is no capability of autohealing and autoscaling.

# Login to ECR (replace <region> and <account-id> with your actual values)
$ aws ecr get-login-password --region <region> | docker login --username AWS --password-stdin <account-id>.dkr.ecr.<region>.amazonaws.com

# Build the Docker image (replace <repo-name> with your ECR repository name)
$ docker build -t <account-id>.dkr.ecr.<region>.amazonaws.com/<repo-name>:latest .

# Push the Docker image to ECR (replace <repo-name> with your ECR repository name)
$ docker push <account-id>.dkr.ecr.<region>.amazonaws.com/<repo-name>:latest
 

For kubernetes , we have 4 methods :-
EKS/AKS/GKS - MINIKUBE - KIND - KUBEADM 

EKS :- ELASTIC KUBERNETES SERVICES.
